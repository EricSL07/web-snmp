#!/bin/bash

# Script de inicializa√ß√£o do Web-SNMP

echo "üåê Iniciando Web-SNMP com Docker Compose..."
echo "========================================"

# Fun√ß√£o para verificar se o Docker est√° rodando
check_docker() {
    if ! docker info > /dev/null 2>&1; then
        echo "‚ùå Docker n√£o est√° rodando. Inicie o Docker e tente novamente."
        exit 1
    fi
}

# Fun√ß√£o para parar containers antigos
stop_old_containers() {
    echo "üîÑ Parando containers antigos..."
    cd infra && docker-compose down 2>/dev/null || true
    cd ..
}

# Fun√ß√£o para iniciar os servi√ßos
start_services() {
    echo "üöÄ Construindo e iniciando todos os servi√ßos..."
    docker-compose up --build -d
    
    echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
    sleep 10
    
    echo "üóÑÔ∏è  Executando migra√ß√µes do banco..."
    docker-compose exec web-app npx prisma migrate deploy || echo "‚ö†Ô∏è  Migra√ß√µes j√° aplicadas ou erro"
}

# Fun√ß√£o para mostrar status
show_status() {
    echo ""
    echo "üìä Status dos servi√ßos:"
    echo "======================"
    docker-compose ps
    
    echo ""
    echo "üåê Servi√ßos dispon√≠veis:"
    echo "========================"
    echo "‚Ä¢ Web App (Next.js):     http://localhost:3000"
    echo "‚Ä¢ Prisma Studio:         http://localhost:5555"
    echo "‚Ä¢ Zabbix Web:            http://localhost:8080"
    echo "‚Ä¢ Ansible API:           http://localhost:5000"
    echo "‚Ä¢ PostgreSQL:            localhost:5432"
    echo "‚Ä¢ Mock Switch (SSH):     localhost:2222"
    echo ""
    echo "üîê Credenciais:"
    echo "‚Ä¢ Zabbix:               Admin / zabbix"
    echo "‚Ä¢ Mock Switch SSH:      admin / admin123"
    echo "‚Ä¢ PostgreSQL:           app / apppass"
}

# Fun√ß√£o para executar testes
run_tests() {
    echo "üß™ Executando testes..."
    sleep 5
    npm run test:quick
}

# Fun√ß√£o principal
main() {
    case "$1" in
        "stop")
            echo "üõë Parando todos os servi√ßos..."
            docker-compose down
            stop_old_containers
            ;;
        "logs")
            docker-compose logs -f
            ;;
        "test")
            run_tests
            ;;
        "restart")
            echo "üîÑ Reiniciando servi√ßos..."
            docker-compose restart
            show_status
            ;;
        *)
            check_docker
            stop_old_containers
            start_services
            show_status
            
            echo "üí° Comandos √∫teis:"
            echo "‚Ä¢ ./start.sh stop     - Parar todos os servi√ßos"
            echo "‚Ä¢ ./start.sh logs     - Ver logs em tempo real"
            echo "‚Ä¢ ./start.sh test     - Executar testes"
            echo "‚Ä¢ ./start.sh restart  - Reiniciar servi√ßos"
            ;;
    esac
}

main "$@"